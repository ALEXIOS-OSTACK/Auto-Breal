--[[  Cultivate Bot ‚Äî Ultimate Card UI + Qi-aware
     - ‡πÉ‡∏ä‡πâ Qi ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á (Qi ‡∏ï‡πâ‡∏≠‡∏á ‚Äú‡πÑ‡∏´‡∏•‡∏Ç‡∏∂‡πâ‡∏ô‚Äù)
     - ‡πÉ‡∏ä‡πâ Progress (‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à Break (>= 100)
     - UI ‡∏´‡∏£‡∏π‡πÇ‡∏ó‡∏ô‡∏Ñ‡∏£‡∏µ‡∏°‡∏ó‡∏≠‡∏á + ‡∏£‡∏¥‡∏ö‡∏ö‡∏¥‡πâ‡∏ô, Progress Bar, Log, Hotkeys, Minimize, Theme
     - Rebind ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥, Auto-Recover, Failsafe
     NOTE: ‡∏õ‡∏£‡∏±‡∏ö path Qi/Progress ‡∏ï‡∏£‡∏á‡∏™‡πà‡∏ß‡∏ô "PATHS" ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡πà‡∏≤‡∏á‡πÑ‡∏õ
--]]

-------------------- Services --------------------
local RS         = game:GetService("ReplicatedStorage")
local Players    = game:GetService("Players")
local UIS        = game:GetService("UserInputService")
local TweenS     = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local RunS       = game:GetService("RunService")

local player   = Players.LocalPlayer
local pg       = player:WaitForChild("PlayerGui")

-------------------- Remotes ---------------------
local RemoteEvents = RS:WaitForChild("RemoteEvents")
local CultivationEvent = RemoteEvents:WaitForChild("CultivationEvent")

-------------------- CONFIG (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ) -----------
local DEFAULTS = {
  CHECK_INTERVAL     = 0.5,
  STAND_UP_DELAY     = 0.5,
  BREAK_DURATION     = 2.0,
  BREAK_DEBOUNCE     = 3.0,
  RECOVERY_TIMEOUT   = 6.0,  -- Qi ‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏±‡∏ö‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ ‚Üí ‡∏Å‡∏î Cultivate ‡πÉ‡∏´‡∏°‡πà
  RECOVERY_COOLDOWN  = 4.0,
  FAILSAFE_SECONDS   = 120,  -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢ Break ‡πÄ‡∏•‡∏¢‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ ‡πÉ‡∏´‡πâ Restart Bot
  START_ON_JOIN      = false,
  THEME              = "cream", -- "cream" | "jade"
}

-------------------- PATHS (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç) --------------
-- Progress (Text: "Progress : 85" / "85%" ‡∏Ø‡∏•‡∏Ø)
local function bindProgressLabel()
  return player:WaitForChild("PlayerGui")
    :WaitForChild("ScreenGui")
    :WaitForChild("Sidebar")
    :WaitForChild("Stats")
    :WaitForChild("StatsFrame")
    :WaitForChild("LowerStats")
    :WaitForChild("Percentage")
end

-- Qi (‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏´‡∏≤‡πÑ‡∏î‡πâ: "Players.<you>.PlayerGui.ScreenGui.Sidebar.Stats.StatsFrame.UpperStats.Qi")
local function bindQiLabel()
  return player:WaitForChild("PlayerGui")
    :WaitForChild("ScreenGui")
    :WaitForChild("Sidebar")
    :WaitForChild("Stats")
    :WaitForChild("StatsFrame")
    :WaitForChild("UpperStats")
    :WaitForChild("Qi")
end

-------------------- State -----------------------
local running        = false
local isMeditating   = false
local isBreakingNow  = false
local lastBreakTime  = 0
local breakCount     = 0

local lastRecoverTry = 0
local lastAnyBreakAt = os.clock()

local progressLabel  = nil
local qiLabel        = nil

local lastPercent    = nil
local lastChangeAt   = os.clock()

local lastQi         = 0
local lastQiAt       = os.clock()

local minimized      = false
local THEME          = DEFAULTS.THEME
local soundOn        = true

-------------------- Utils -----------------------
local function pushNotify(msg)
  pcall(function()
    StarterGui:SetCore("SendNotification", {Title="CultivateBot", Text=msg, Duration=2.5})
  end)
end

local function fire(action)
  local ok, err = pcall(function() CultivationEvent:FireServer(action) end)
  if not ok then warn("[CultivateBot] Fire failed:", action, err) end
end

local function parseProgress()
  if not progressLabel then return 0,"0" end
  local t = progressLabel.Text or ""
  local numStr = t:match("Progress%s*:%s*([%d%.]+)") or t:match("([%d%.]+)") or "0"
  local raw = tonumber(numStr) or 0
  local percent = (t:find("%%") or raw>1) and math.clamp(raw,0,100) or math.clamp(raw*100,0,100)
  local original = t:find("%%") and (numStr.."%") or numStr
  return percent, original
end

-- Qi parser (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö K/M/B/T/Q)
local mult = {K=1e3, M=1e6, B=1e9, T=1e12, Q=1e15}
local function parseQi()
  if not qiLabel then return 0 end
  local t = qiLabel.Text or ""
  local num = t:match("Qi%s*:%s*([%d%.]+)") or "0"
  local suf = t:match("Qi%s*:%s*[%d%.]+%s*([KMBTQ])") or ""
  local v = tonumber(num) or 0
  if mult[suf] then v = v*mult[suf] end
  return v
end

local function fmtSuffix(n)
  if n >= 1e15 then return string.format("%.2fQ", n/1e15)
  elseif n >= 1e12 then return string.format("%.2fT", n/1e12)
  elseif n >= 1e9 then return string.format("%.2fB", n/1e9)
  elseif n >= 1e6 then return string.format("%.2fM", n/1e6)
  elseif n >= 1e3 then return string.format("%.2fK", n/1e3)
  else return string.format("%.0f", n) end
end

-------------------- Actions ---------------------
local function startMeditate()
  if not isMeditating and not isBreakingNow then
    fire("Cultivate")
    isMeditating = true
  end
end

local function stopMeditate()
  if isMeditating then
    fire("Cultivate")
    isMeditating = false
  end
end

local function doBreakthroughCycle()
  if isBreakingNow then return end
  if os.clock() - lastBreakTime <= DEFAULTS.BREAK_DEBOUNCE then return end
  isBreakingNow = true
  stopMeditate()
  task.wait(DEFAULTS.STAND_UP_DELAY)
  fire("Breakthrough")
  lastBreakTime = os.clock()
  lastAnyBreakAt = os.clock()
  task.wait(DEFAULTS.BREAK_DURATION)
  startMeditate()
  isBreakingNow = false
  breakCount += 1
end

-------------------- THEME -----------------------
local P = {
  cream = {
    panel   = Color3.fromRGB(250,244,234),
    card    = Color3.fromRGB(255,249,240),
    headA   = Color3.fromRGB(252,234,210),
    headB   = Color3.fromRGB(244,221,192),
    stroke  = Color3.fromRGB(214,179,117),
    text    = Color3.fromRGB(100,70,40),
    accentA = Color3.fromRGB(255,190,120),
    accentB = Color3.fromRGB(235,110,80),
    ribbon  = Color3.fromRGB(248,223,184),
    statusWait = Color3.fromRGB(120,90,60),
    statusMed  = Color3.fromRGB(40,160,120),
    statusBreak= Color3.fromRGB(200,100,40),
    barBg  = Color3.fromRGB(240,220,190),
    barFg  = Color3.fromRGB(230,160,60),
    ok     = Color3.fromRGB(40,200,120),
    warn   = Color3.fromRGB(240,180,60),
    bad    = Color3.fromRGB(220,80,60),
  },
  jade = {
    panel   = Color3.fromRGB(26,32,36),
    card    = Color3.fromRGB(32,40,46),
    headA   = Color3.fromRGB(46,58,64),
    headB   = Color3.fromRGB(38,50,56),
    stroke  = Color3.fromRGB(170,140,70),
    text    = Color3.fromRGB(230,230,220),
    accentA = Color3.fromRGB(70,180,150),
    accentB = Color3.fromRGB(40,130,110),
    ribbon  = Color3.fromRGB(36,44,48),
    statusWait = Color3.fromRGB(200,200,190),
    statusMed  = Color3.fromRGB(120,200,170),
    statusBreak= Color3.fromRGB(255,170,90),
    barBg  = Color3.fromRGB(55,65,70),
    barFg  = Color3.fromRGB(70,180,150),
    ok     = Color3.fromRGB(120,210,170),
    warn   = Color3.fromRGB(230,190,80),
    bad    = Color3.fromRGB(255,120,100),
  }
}
local palette = P[THEME] or P.cream

-------------------- UI --------------------------
local gui = Instance.new("ScreenGui")
gui.Name = "CultivateBot_UI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = pg

-- Root
local root = Instance.new("Frame")
root.Size = UDim2.fromOffset(780, 240)
root.Position = UDim2.new(0, 40, 0, 110)
root.BackgroundColor3 = palette.panel
root.BorderSizePixel = 0
root.Parent = gui
Instance.new("UICorner", root).CornerRadius = UDim.new(0, 18)
local rootStroke = Instance.new("UIStroke", root) rootStroke.Color = palette.stroke rootStroke.Thickness = 2

local shadow = Instance.new("ImageLabel")
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.72
shadow.ImageColor3 = Color3.new(0,0,0)
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10,10,118,118)
shadow.Size = UDim2.new(1,30,1,30)
shadow.Position = UDim2.fromOffset(-15,-15)
shadow.Parent = root

-- Ribbon
local ribbon = Instance.new("Frame")
ribbon.Size = UDim2.new(0, 64, 1, -28)
ribbon.Position = UDim2.fromOffset(-12, 14)
ribbon.BackgroundColor3 = palette.ribbon
ribbon.BorderSizePixel = 0
ribbon.Parent = root
Instance.new("UICorner", ribbon).CornerRadius = UDim.new(0, 12)
local ribStroke = Instance.new("UIStroke", ribbon) ribStroke.Color = palette.stroke

local ribbonText = Instance.new("TextLabel")
ribbonText.BackgroundTransparency = 1
ribbonText.Size = UDim2.new(1,0,1,0)
ribbonText.Font = Enum.Font.GothamBlack
ribbonText.TextSize = 18
ribbonText.TextColor3 = palette.text
ribbonText.TextWrapped = true
ribbonText.Text = "Culti\nvate\nÁ¶èÂà©"
ribbonText.Parent = ribbon

-- Header
local header = Instance.new("Frame")
header.Size = UDim2.new(1,-78,0,50)
header.Position = UDim2.fromOffset(66,8)
header.BackgroundColor3 = palette.headA
header.BorderSizePixel = 0
header.Parent = root
Instance.new("UICorner", header).CornerRadius = UDim.new(0, 12)
local hStroke = Instance.new("UIStroke", header) hStroke.Color = palette.stroke
local hGrad = Instance.new("UIGradient", header)
hGrad.Color = ColorSequence.new{
  ColorSequenceKeypoint.new(0, palette.headA),
  ColorSequenceKeypoint.new(1, palette.headB)
}
hGrad.Rotation = 90

local title = Instance.new("TextLabel")
title.BackgroundTransparency = 1
title.Size = UDim2.new(1,-220,1,0)
title.Position = UDim2.fromOffset(14,0)
title.Font = Enum.Font.GothamSemibold
title.TextXAlignment = Enum.TextXAlignment.Left
title.TextSize = 20
title.TextColor3 = palette.text
title.Text = "Cultivate Bot"
title.Parent = header

local function mkSmallBtn(txt)
  local b = Instance.new("TextButton")
  b.Size = UDim2.fromOffset(32, 30)
  b.BackgroundColor3 = palette.accentA
  b.Text = txt
  b.Font = Enum.Font.GothamBold
  b.TextSize = 16
  b.TextColor3 = Color3.new(1,1,1)
  b.Parent = header
  Instance.new("UICorner", b).CornerRadius = UDim.new(0, 8)
  local st = Instance.new("UIStroke", b) st.Color = palette.stroke
  return b
end

local btnTheme = mkSmallBtn("üé®"); btnTheme.Position = UDim2.new(1,-180,0.5,-15)
local btnRebind = mkSmallBtn("üîÑ"); btnRebind.Position = UDim2.new(1,-140,0.5,-15)
local btnMin    = mkSmallBtn("‚Äî");  btnMin.Position    = UDim2.new(1,-100,0.5,-15)

local btnToggle = Instance.new("TextButton")
btnToggle.Size = UDim2.fromOffset(110, 34)
btnToggle.Position = UDim2.new(1, -110-12, 0.5, -17)
btnToggle.BackgroundColor3 = palette.accentB
btnToggle.Text = "Start"
btnToggle.TextColor3 = Color3.new(1,1,1)
btnToggle.Font = Enum.Font.GothamSemibold
btnToggle.TextSize = 16
btnToggle.Parent = header
Instance.new("UICorner", btnToggle).CornerRadius = UDim.new(0, 12)
local stToggle = Instance.new("UIStroke", btnToggle) stToggle.Color = palette.stroke
local gradToggle = Instance.new("UIGradient", btnToggle)
gradToggle.Color = ColorSequence.new{
  ColorSequenceKeypoint.new(0, palette.accentA),
  ColorSequenceKeypoint.new(1, palette.accentB)
}
gradToggle.Rotation = 0

-- Drag + snap
do
  local dragging, dragStart, startPos
  header.InputBegan:Connect(function(i)
    if i.UserInputType==Enum.UserInputType.MouseButton1 then
      dragging=true; dragStart=i.Position; startPos=root.Position
    end
  end)
  header.InputEnded:Connect(function(i)
    if i.UserInputType==Enum.UserInputType.MouseButton1 then
      dragging=false
      local vp = workspace.CurrentCamera.ViewportSize
      local x = math.clamp(root.Position.X.Offset, 10, vp.X - root.Size.X.Offset - 10)
      local y = math.clamp(root.Position.Y.Offset, 10, vp.Y - 80)
      root.Position = UDim2.fromOffset(x,y)
    end
  end)
  UIS.InputChanged:Connect(function(i)
    if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then
      local d=i.Position-dragStart
      root.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+d.X,startPos.Y.Scale,startPos.Y.Offset+d.Y)
    end
  end)
end

-- Content (3 cards responsive)
local content = Instance.new("Frame")
content.BackgroundTransparency = 1
content.Size = UDim2.new(1,-92,1,-88)
content.Position = UDim2.fromOffset(80,74)
content.Parent = root
local grid = Instance.new("UIGridLayout", content)
grid.CellPadding = UDim2.fromOffset(12,12)
grid.FillDirectionMaxCells = 3
grid.CellSize = UDim2.new(1/3,-8,1,-8)
local function updateResponsive()
  local vx = workspace.CurrentCamera.ViewportSize.X
  if vx < 900 then grid.FillDirectionMaxCells = 2; grid.CellSize = UDim2.new(1/2,-8,1,-8)
  else grid.FillDirectionMaxCells = 3; grid.CellSize = UDim2.new(1/3,-8,1,-8) end
end
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateResponsive)
updateResponsive()

local function mkCard(titleText, icon)
  local card = Instance.new("Frame")
  card.BackgroundColor3 = palette.card
  card.BorderSizePixel = 0
  Instance.new("UICorner", card).CornerRadius = UDim.new(0, 14)
  local cStroke = Instance.new("UIStroke", card) cStroke.Color = palette.stroke cStroke.Thickness = 2

  local head = Instance.new("Frame", card)
  head.Size = UDim2.new(1,-20,0,42)
  head.Position = UDim2.fromOffset(10,10)
  head.BackgroundColor3 = palette.headA
  head.BorderSizePixel = 0
  Instance.new("UICorner", head).CornerRadius = UDim.new(0, 10)
  local hst = Instance.new("UIStroke", head) hst.Color = palette.stroke
  local hgrad = Instance.new("UIGradient", head)
  hgrad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, palette.headA),
    ColorSequenceKeypoint.new(1, palette.headB)
  }
  hgrad.Rotation = 90

  local tl = Instance.new("TextLabel", head)
  tl.BackgroundTransparency = 1
  tl.Size = UDim2.new(1,0,1,0)
  tl.Font = Enum.Font.GothamBold
  tl.TextSize = 16
  tl.TextColor3 = palette.text
  tl.Text = (icon or "").."  "..titleText

  local body = Instance.new("Frame", card)
  body.Size = UDim2.new(1,-20,1,-64)
  body.Position = UDim2.fromOffset(10,56)
  body.BackgroundTransparency = 1

  return card, body
end

-- Card 1: Status
local cardStatus, bodyStatus = mkCard("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", "üßò"); cardStatus.Parent = content

local statusIcon = Instance.new("TextLabel", bodyStatus)
statusIcon.BackgroundTransparency=1; statusIcon.Size=UDim2.new(0,24,0,24)
statusIcon.Font=Enum.Font.GothamBold; statusIcon.TextSize=18; statusIcon.Text="‚è≥"; statusIcon.TextColor3=palette.text

local statusLabel = Instance.new("TextLabel", bodyStatus)
statusLabel.BackgroundTransparency=1; statusLabel.Position=UDim2.fromOffset(28,0)
statusLabel.Size=UDim2.new(1,-28,0,24); statusLabel.Font=Enum.Font.Gotham
statusLabel.TextXAlignment=Enum.TextXAlignment.Left; statusLabel.TextSize=14
statusLabel.TextColor3=palette.statusWait; statusLabel.Text="Status: Waiting..."

local progressText = Instance.new("TextLabel", bodyStatus)
progressText.BackgroundTransparency=1; progressText.Position=UDim2.fromOffset(0,26)
progressText.Size=UDim2.new(1,0,0,20); progressText.Font=Enum.Font.Gotham
progressText.TextXAlignment=Enum.TextXAlignment.Left; progressText.TextSize=14
progressText.TextColor3=palette.text; progressText.Text="Progress: ‚Äî (0%)"

local barBg = Instance.new("Frame", bodyStatus)
barBg.Position=UDim2.fromOffset(0,50); barBg.Size=UDim2.new(1,-10,0,14)
barBg.BackgroundColor3=palette.barBg; barBg.BorderSizePixel=0
Instance.new("UICorner", barBg).CornerRadius=UDim.new(0,7)
local barFill = Instance.new("Frame", barBg)
barFill.Size=UDim2.new(0,0,1,0); barFill.BackgroundColor3=palette.barFg; barFill.BorderSizePixel=0
Instance.new("UICorner", barFill).CornerRadius=UDim.new(0,7)

local errorLabel = Instance.new("TextLabel", bodyStatus)
errorLabel.BackgroundTransparency=1; errorLabel.Position=UDim2.fromOffset(0,70)
errorLabel.Size=UDim2.new(1,0,0,18); errorLabel.Font=Enum.Font.Gotham
errorLabel.TextXAlignment=Enum.TextXAlignment.Left; errorLabel.TextSize=12
errorLabel.TextColor3=Color3.fromRGB(200,60,60); errorLabel.Text=""

-- Qi row
local qiRow = Instance.new("Frame", bodyStatus)
qiRow.Position=UDim2.fromOffset(0,90); qiRow.Size=UDim2.new(1,0,0,22); qiRow.BackgroundTransparency=1
local qiDot = Instance.new("Frame", qiRow)
qiDot.Size=UDim2.fromOffset(14,14); qiDot.Position=UDim2.fromOffset(0,4)
qiDot.BackgroundColor3=Color3.fromRGB(160,160,160); qiDot.BorderSizePixel=0
Instance.new("UICorner", qiDot).CornerRadius=UDim.new(1,7)
local qiText = Instance.new("TextLabel", qiRow)
qiText.BackgroundTransparency=1; qiText.Position=UDim2.fromOffset(20,0)
qiText.Size=UDim2.new(1,-20,1,0); qiText.Font=Enum.Font.Gotham
qiText.TextXAlignment=Enum.TextXAlignment.Left; qiText.TextSize=14
qiText.TextColor3=palette.text; qiText.Text="Qi: ‚Äî  (flow: ‚Äî)"

-- Card 2: Control
local cardControl, bodyControl = mkCard("‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°", "‚öôÔ∏è"); cardControl.Parent = content
local bigNumber = Instance.new("TextLabel", bodyControl)
bigNumber.BackgroundTransparency=1; bigNumber.Size=UDim2.new(1,0,0,34)
bigNumber.Font=Enum.Font.GothamBlack; bigNumber.TextSize=26
bigNumber.TextColor3=palette.barFg; bigNumber.Text="‚ö° Breaks: 0"

local actBtn = Instance.new("TextButton", bodyControl)
actBtn.Size=UDim2.fromOffset(160,42); actBtn.Position=UDim2.fromOffset(0,38)
actBtn.BackgroundColor3=palette.accentB; actBtn.Text="Start"; actBtn.TextColor3=Color3.new(1,1,1)
actBtn.Font=Enum.Font.GothamSemibold; actBtn.TextSize=18
Instance.new("UICorner", actBtn).CornerRadius=UDim.new(0,12)
local actStroke = Instance.new("UIStroke", actBtn) actStroke.Color=palette.stroke
local actGrad = Instance.new("UIGradient", actBtn)
actGrad.Color=ColorSequence.new{
  ColorSequenceKeypoint.new(0, palette.accentA),
  ColorSequenceKeypoint.new(1, palette.accentB)
}; actGrad.Rotation=0
actBtn.MouseEnter:Connect(function() TweenS:Create(actBtn, TweenInfo.new(0.12), {Size=UDim2.fromOffset(168,46)}):Play() end)
actBtn.MouseLeave:Connect(function() TweenS:Create(actBtn, TweenInfo.new(0.12), {Size=UDim2.fromOffset(160,42)}):Play() end)

local tip = Instance.new("TextLabel", bodyControl)
tip.BackgroundTransparency=1; tip.Position=UDim2.fromOffset(0,84)
tip.Size=UDim2.new(1,0,0,18); tip.Font=Enum.Font.Gotham; tip.TextSize=12
tip.TextColor3=palette.text; tip.Text="F8: Start/Stop ¬∑ RightShift: ‡∏ã‡πà‡∏≠‡∏ô/‡πÅ‡∏™‡∏î‡∏á"

-- Card 3: Info
local cardInfo, bodyInfo = mkCard("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‚ÑπÔ∏è"); cardInfo.Parent = content
local lastBreakText = Instance.new("TextLabel", bodyInfo)
lastBreakText.BackgroundTransparency=1; lastBreakText.Size=UDim2.new(1,0,0,22)
lastBreakText.Font=Enum.Font.Gotham; lastBreakText.TextXAlignment=Enum.TextXAlignment.Left
lastBreakText.TextSize=14; lastBreakText.TextColor3=palette.text; lastBreakText.Text="‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: -"

local cooldownText = Instance.new("TextLabel", bodyInfo)
cooldownText.BackgroundTransparency=1; cooldownText.Position=UDim2.fromOffset(0,22)
cooldownText.Size=UDim2.new(1,0,0,22); cooldownText.Font=Enum.Font.Gotham
cooldownText.TextXAlignment=Enum.TextXAlignment.Left; cooldownText.TextSize=14
cooldownText.TextColor3=palette.text; cooldownText.Text="Cooldown: 0.0s"

local remoteStatus = Instance.new("TextLabel", bodyInfo)
remoteStatus.BackgroundTransparency=1; remoteStatus.Position=UDim2.fromOffset(0,44)
remoteStatus.Size=UDim2.new(1,0,0,20); remoteStatus.Font=Enum.Font.Gotham
remoteStatus.TextSize=14; remoteStatus.TextXAlignment=Enum.TextXAlignment.Left
remoteStatus.TextColor3=palette.text; remoteStatus.Text="Remote: "..(CultivationEvent and "üü¢ OK" or "üî¥ Missing")

local logBox = Instance.new("TextLabel", bodyInfo)
logBox.BackgroundTransparency=1; logBox.Position=UDim2.fromOffset(0,66)
logBox.Size=UDim2.new(1,0,0,50); logBox.Font=Enum.Font.Gotham; logBox.TextSize=12
logBox.TextXAlignment=Enum.TextXAlignment.Left; logBox.TextYAlignment=Enum.TextYAlignment.Top
logBox.TextColor3=palette.text; logBox.TextWrapped=true; logBox.Text="-"
local logs = {}
local function pushLog(s)
  table.insert(logs, 1, string.format("[%s] %s", os.date("!%H:%M:%S"), s))
  while #logs>5 do table.remove(logs) end
  logBox.Text = table.concat(logs, "\n")
end

-- Minimize
btnMin.MouseButton1Click:Connect(function()
  minimized = not minimized
  local toH = minimized and 86 or 240
  TweenS:Create(root, TweenInfo.new(0.2), {Size=UDim2.fromOffset(780,toH)}):Play()
  content.Visible = not minimized
  btnToggle.Visible = not minimized
  btnMin.Text = minimized and "+" or "‚Äî"
end)

-- Theme switch
local function applyTheme(newTheme)
  THEME = newTheme; palette = P[THEME] or P.cream
  root.BackgroundColor3=palette.panel; rootStroke.Color=palette.stroke
  ribbon.BackgroundColor3=palette.ribbon; ribStroke.Color=palette.stroke
  header.BackgroundColor3=palette.headA; hStroke.Color=palette.stroke
  hGrad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, palette.headA),
    ColorSequenceKeypoint.new(1, palette.headB)
  }
  title.TextColor3=palette.text
  for _,card in ipairs({cardStatus,cardControl,cardInfo}) do
    card.BackgroundColor3=palette.card; card.UIStroke.Color=palette.stroke
    local head=card:GetChildren()[1]; head.BackgroundColor3=palette.headA; head.UIStroke.Color=palette.stroke; head.UIGradient.Color=hGrad.Color
    head.TextLabel.TextColor3=palette.text
  end
  statusLabel.TextColor3=palette.statusWait
  progressText.TextColor3=palette.text; barBg.BackgroundColor3=palette.barBg; barFill.BackgroundColor3=palette.barFg
  bigNumber.TextColor3=palette.barFg
  actStroke.Color=palette.stroke
  actGrad.Color=ColorSequence.new{ColorSequenceKeypoint.new(0,palette.accentA),ColorSequenceKeypoint.new(1,palette.accentB)}
  stToggle.Color=palette.stroke; gradToggle.Color=actGrad.Color
  tip.TextColor3=palette.text; lastBreakText.TextColor3=palette.text; cooldownText.TextColor3=palette.text
  remoteStatus.TextColor3=palette.text; logBox.TextColor3=palette.text; ribbonText.TextColor3=palette.text
end
applyTheme(THEME)
btnTheme.MouseButton1Click:Connect(function() applyTheme(THEME=="cream" and "jade" or "cream") end)

-------------------- Controls --------------------
local function setStatus(txt, col, icon)
  statusLabel.Text = "Status: "..txt
  statusLabel.TextColor3 = col
  statusIcon.Text = icon or "‚è≥"
end

local function setRunning(on, silent)
  running = on
  btnToggle.Text, actBtn.Text = (on and "Stop" or "Start"), (on and "Stop" or "Start")
  gradToggle.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, palette.accentA),
    ColorSequenceKeypoint.new(1, on and palette.accentB or palette.accentA)
  }
  actGrad.Color = gradToggle.Color
  if not silent then pushNotify(on and "Bot Started" or "Bot Stopped") end
  if not on then setStatus("Idle", palette.statusWait, "‚è≥") end
end

btnToggle.MouseButton1Click:Connect(function() setRunning(not running) end)
actBtn.MouseButton1Click:Connect(function() setRunning(not running) end)

UIS.InputBegan:Connect(function(input,gp)
  if gp then return end
  if input.KeyCode==Enum.KeyCode.RightShift then
    root.Visible = not root.Visible
  elseif input.KeyCode==Enum.KeyCode.F8 then
    setRunning(not running)
  end
end)

btnRebind.MouseButton1Click:Connect(function()
  progressLabel = bindProgressLabel()
  qiLabel = bindQiLabel()
  pushLog("Rebind complete.")
end)

-------------------- HUD update ------------------
local function updateHUD(percent, original)
  progressText.Text = string.format("Progress: %s (%d%%)", original, math.floor(percent+0.5))
  barFill.Size = UDim2.new(percent/100,0,1,0)

  if not progressLabel then
    errorLabel.Text = "‚ùå ‡∏¢‡∏±‡∏á‡∏´‡∏≤ Progress UI ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ (‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ Stats)"
  else errorLabel.Text = "" end

  -- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å state
  if isBreakingNow then
    setStatus("Breaking...", palette.statusBreak, "üü†")
  elseif isMeditating then
    setStatus("Meditating...", palette.statusMed, "üü¢")
  else
    setStatus("Waiting...", palette.statusWait, "‚è≥")
  end

  bigNumber.Text = ("‚ö° Breaks: %d"):format(breakCount)
  if lastBreakTime>0 then lastBreakText.Text = ("‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: %.1fs ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß"):format(os.clock()-lastBreakTime) end
  local left = math.max(0, DEFAULTS.BREAK_DEBOUNCE - (os.clock()-lastBreakTime))
  cooldownText.Text = ("Cooldown: %.1fs"):format(left)
  remoteStatus.Text = "Remote: "..(CultivationEvent and "üü¢ OK" or "üî¥ Missing")

  -- Qi view
  local q = parseQi()
  qiText.Text = string.format("Qi: %s  (flow: %.1fs ago)", fmtSuffix(q), os.clock()-lastQiAt)
  local dt = os.clock() - lastQiAt
  qiDot.BackgroundColor3 = dt<=2 and palette.ok or (dt<=6 and palette.warn or palette.bad)
end

-------------------- Binding labels --------------
local function tryBindLabels()
  progressLabel = progressLabel or bindProgressLabel()
  qiLabel       = qiLabel       or bindQiLabel()
  if progressLabel then
    progressLabel:GetPropertyChangedSignal("Text"):Connect(function()
      local p,o = parseProgress(); updateHUD(p,o)
    end)
  end
  if qiLabel then
    qiLabel:GetPropertyChangedSignal("Text"):Connect(function()
      local v = parseQi()
      if v>lastQi then lastQi=v; lastQiAt=os.clock() end
      local p,o = parseProgress(); updateHUD(p,o)
    end)
  end
end
tryBindLabels()

-- ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ UI ‡πÇ‡∏ú‡∏•‡πà‡∏ä‡πâ‡∏≤
pg.DescendantAdded:Connect(function(d)
  if not progressLabel and d:IsA("TextLabel") and d.Name=="Percentage" then
    progressLabel = d
  end
  if not qiLabel and d:IsA("TextLabel") and d.Name=="Qi" then
    qiLabel = d
  end
end)

player.CharacterAdded:Connect(function()
  progressLabel=nil; qiLabel=nil
  task.defer(tryBindLabels)
end)

-------------------- Main loop -------------------
task.spawn(function()
  while true do
    if running then
      if not progressLabel or not qiLabel then tryBindLabels() end

      local pct, original = parseProgress()
      local qiVal = parseQi()

      -- Qi ‡πÑ‡∏´‡∏• = ‡∏ô‡∏±‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà
      if qiVal > lastQi then
        lastQi = qiVal
        lastQiAt = os.clock()
      end

      if pct >= 100 then
        doBreakthroughCycle()
      else
        -- ‡∏ñ‡πâ‡∏≤ Qi ‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏±‡∏ö‡∏ô‡∏≤‡∏ô ‚Üí ‡∏Å‡∏î‡∏ô‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
        local dt = os.clock() - lastQiAt
        if not isBreakingNow and dt > DEFAULTS.RECOVERY_TIMEOUT and (os.clock()-lastRecoverTry)>DEFAULTS.RECOVERY_COOLDOWN then
          fire("Cultivate"); isMeditating=true; lastRecoverTry=os.clock()
          pushLog("Recover: pressed Cultivate (Qi not moving)")
        end
        startMeditate()
      end

      -- Failsafe: ‡∏ô‡∏≤‡∏ô‡∏°‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ break ‚Üí restart
      if os.clock() - lastAnyBreakAt > DEFAULTS.FAILSAFE_SECONDS then
        pushLog("Failsafe: restart bot")
        setRunning(false, true); task.wait(0.2); setRunning(true, true)
        lastAnyBreakAt = os.clock()
      end

      updateHUD(pct, original)
    end

    task.wait(DEFAULTS.CHECK_INTERVAL)
  end
end)

-- init
setRunning(DEFAULTS.START_ON_JOIN, true)
updateHUD(0,"‚Äî")
